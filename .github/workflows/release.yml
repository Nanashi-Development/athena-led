name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest
    container:
      image: rust:slim
    
    steps:
      - name: Install Git and dependencies
        run: |
          apt-get update && apt-get install -y \
          git \
          gcc-aarch64-linux-gnu \
          g++-aarch64-linux-gnu \
          musl-tools \
          pkg-config \
          gettext-base \
          --no-install-recommends

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup git
        run: |
          git config --global --add safe.directory /__w/athena-led/athena-led
          git fetch --tags -f

      - name: Add target
        run: rustup target add aarch64-unknown-linux-musl

      - name: Set environment variables
        run: |
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CC_aarch64_unknown_linux_musl=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX_aarch64_unknown_linux_musl=aarch64-linux-gnu-g++" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "RUST_VERSION=$(rustc --version)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Generate changelog
        id: changelog
        working-directory: ${{ github.workspace }}
        run: |
          # Function to get commits by type
          get_commits_by_type() {
            local type=$1
            local range=$2
            git log --pretty=format:"* %s" --grep="^$type:" "$range" | \
            grep -vE "(workflow|ci:|test:|chore:|release|configuration|checkout|action|git)" || true | \
            sed "s/^* $type: /* /"
          }
          
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Get commit range
          if [ -z "$PREV_TAG" ]; then
            RANGE="$GITHUB_SHA"
          else
            RANGE="$PREV_TAG..$GITHUB_SHA"
          fi
          
          # Generate categorized changes and save to temporary files
          get_commits_by_type "feat" "$RANGE" > feat_changes.txt
          get_commits_by_type "fix" "$RANGE" > fix_changes.txt
          get_commits_by_type "docs" "$RANGE" > doc_changes.txt
          get_commits_by_type "perf" "$RANGE" > perf_changes.txt
          
          # Handle other changes
          git log --pretty=format:"* %s" "$RANGE" | \
            (grep -vE "^\* (feat|fix|docs|perf|test|ci|chore):" || true) | \
            (grep -vE "(workflow|configuration|setup|Initial commit|release|changelog|template|checkout|action|git)" || true) > other_changes.txt
          
          # Read files and set outputs
          echo "feat_changes=$(cat feat_changes.txt)" >> $GITHUB_OUTPUT
          echo "fix_changes=$(cat fix_changes.txt)" >> $GITHUB_OUTPUT
          echo "doc_changes=$(cat doc_changes.txt)" >> $GITHUB_OUTPUT
          echo "perf_changes=$(cat perf_changes.txt)" >> $GITHUB_OUTPUT
          echo "other_changes=$(cat other_changes.txt)" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          cargo build --target aarch64-unknown-linux-musl --release
          mkdir -p release
          cp target/aarch64-unknown-linux-musl/release/athena-led release/
          cd release && tar czf athena-led-aarch64-musl-v${VERSION}.tar.gz athena-led
          echo "SHA256SUM=$(sha256sum athena-led-aarch64-musl-v${VERSION}.tar.gz)" >> $GITHUB_ENV

      - name: Generate release notes
        run: |
          {
            echo "# Athena LED ${{ github.ref_name }}"
            echo
            echo "## Changes"
            
            if [ -n "${{ steps.changelog.outputs.feat_changes }}" ]; then
              echo "### New Features"
              echo "${{ steps.changelog.outputs.feat_changes }}"
              echo
            fi
            
            if [ -n "${{ steps.changelog.outputs.fix_changes }}" ]; then
              echo "### Bug Fixes"
              echo "${{ steps.changelog.outputs.fix_changes }}"
              echo
            fi
            
            if [ -n "${{ steps.changelog.outputs.doc_changes }}" ]; then
              echo "### Documentation"
              echo "${{ steps.changelog.outputs.doc_changes }}"
              echo
            fi
            
            if [ -n "${{ steps.changelog.outputs.perf_changes }}" ]; then
              echo "### Performance Improvements"
              echo "${{ steps.changelog.outputs.perf_changes }}"
              echo
            fi
            
            if [ -n "${{ steps.changelog.outputs.other_changes }}" ]; then
              echo "### Other Changes"
              echo "${{ steps.changelog.outputs.other_changes }}"
              echo
            fi
            
            echo "## Checksums"
            echo "\`\`\`"
            echo "$SHA256SUM"
            echo "\`\`\`"
          } > release/RELEASE_NOTES.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/athena-led-aarch64-musl-v${{ env.VERSION }}.tar.gz
          body_path: release/RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}